version: '3.1'

services:
  mysql:
    restart: always
    image: mysql:8.0.0
    container_name: mysql
    ports:
      - "3307:3306"
    volumes:
      - ./store/:/var/lib/mysql
    mem_limit: 512m
    networks:
      - mysqlnetwork
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=local
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - PMA_USER=root
      - PMA_PASSWORD=root

  # mysql-admin:
  #   restart: always
  #   image: phpmyadmin/phpmyadmin
  #   container_name: mariadb-phpmyadmin
  #   ports:
  #     - "8001:80"
  #   mem_limit: 512m
  #   networks:
  #     - mysqlnetwork
  #   depends_on:
  #     - mysql
  #   environment:
  #     PMA_HOST: mysql
  #     PMA_PORT: 3306
  #     PMA_USER: root
  #     PMA_PASSWORD: root

  redis-server:
    restart: always
    image: redis:7.0
    container_name: redis-server
    command: /bin/bash -c 'redis-server --appendonly yes'
    sysctls:
      - net.core.somaxconn=65535
    ports:
      - "6380:6379"
    volumes:
      - ./redis:/data
    mem_limit: 96m
    networks:
      - mysqlnetwork

  db:
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5433:5432'
    volumes:
      - db:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql

  mongo:
    image: mongo
    restart: always
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8082:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

volumes:
  mysql:
    driver: local
  redis:
    driver: local
  db:
    driver: local

networks:
  mysqlnetwork:
    driver: bridge
